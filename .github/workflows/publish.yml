name: publish

on: 
  release:
    types: [created]

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    publish:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            id-token: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v5
            - name: Install cosign
              if: github.event_name != 'pull_request'
              uses: sigstore/cosign-installer@v3
              with:
                cosign-release: 'v2.2.4'
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Log into registry ${{ env.REGISTRY }}
              uses: docker/login-action@v3
              with:
                registry: ${{ env.REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
            - name: Extract Docker metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            - name: Build and push Docker image
              id: build-and-push
              uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
              with:
                context: .
                push: ${{ github.event_name != 'pull_request' }}
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}
                cache-from: type=gha
                cache-to: type=gha,mode=max
            - name: Sign the published Docker image
              env:
                TAGS: ${{ steps.meta.outputs.tags }}
                DIGEST: ${{ steps.build-and-push.outputs.digest }}
              run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
            - name: set image tag
              run: sed -i "s|REPLACE-IMAGE|${{ github.event.release.tag_name }}|g" chats/npm-proxy/templates/deployment.yaml
            - name: Run chart-releaser
              uses: helm/chart-releaser-action@v1
              env:
                CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
